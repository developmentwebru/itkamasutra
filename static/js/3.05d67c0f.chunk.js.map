{"version":3,"sources":["components/Content/MyPosts/MyPosts.module.css","components/Content/MyPosts/Post/Post.module.css","components/Content/ProfileInfo/ProfileInfo.module.css","components/Content/MyPosts/Post/Post.jsx","components/Content/MyPosts/MyPosts.jsx","components/Content/ProfileInfo/ProfileStatus.jsx","components/Content/ProfileInfo/ProfileStatusWithHooks.jsx","components/Content/ProfileInfo/ProfileInfo.jsx","components/Content/MyPosts/MyPostsContainer.jsx","components/Content/Content.jsx","components/Content/ContentContainer.jsx"],"names":["module","exports","Post","props","console","log","message","className","s","item","likesCount","MyPosts","postsElements","this","posts","map","p","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","PureComponent","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","React","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","src","photos","large","Preloader","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Content","ContentContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.05d67c0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1sosA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Co28\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3trKU\"};","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n\n    console.log(props.message);\n\n    return (\n    <div className={s.item}>\n        <div>post1<br/>\n            <div>\n                {props.message}\n            </div>\n            <div>\n                Likes: <span>{props.likesCount}</span>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Post;","import React, {PureComponent} from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/preloader/FormsControls/FormsControls\";\n\nclass MyPosts extends PureComponent {\n\n    render() {\n        console.log(\"Render\");\n        let postsElements = this.props.posts.map(p =>\n            <Post message={p.message} likesCount={p.likesCount}/>);\n\n        let newPostElement = React.createRef();\n\n        let onAddPost = (values) => {\n            this.props.addPost(values.newPostText);\n        }\n\n\n        return (\n            <div className={s.postsBlock}>\n                <div>\n                    <h3> My posts </h3>\n                    <AddNewPostFormRedux onSubmit={onAddPost}/>\n                    <div className={s.posts}>\n                        new post\n                        {postsElements}\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst maxLength10 = maxLengthCreator(10);\nlet AddNewPostForm = (props) =>{\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name=\"newPostText\" component={Textarea} placeholder={\"New messages\"}\n                       validate={[required, maxLength10]}/>\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nlet AddNewPostFormRedux =reduxForm({form: \"ProfileAddNewPosForm\"})(AddNewPostForm);\n\n\nexport default MyPosts;","import React from 'react';\r\n\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState) {\r\n       if (prevProps.status !== this.props.status){\r\n        this.setState({\r\n            status: this.props.status\r\n        });\r\n    }}\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-----\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode,setEditMode] = useState(false);\r\n    let [status,setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    },[props.status] );\r\n\r\n        const activateEditMode = () => {\r\n            setEditMode(true);\r\n        }\r\n        const deactivateEditMode = () => {\r\n            setEditMode(false);\r\n            props.updateStatus(status);\r\n        }\r\n        const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                           value={status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus\"\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = (props) => {\n    if (!props.profile) {\n        return <Preloader />\n    }\n\n    return (\n        <div>\n            <div className={s.descriptionBlock}>\n               <img src={props.profile.photos.large}  />\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport StoreContext from \"../../../StoreContext\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n}\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport c from './Content.module.css';\nimport MyPosts from \"./MyPosts/MyPosts\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Content = (props) => {\n\n\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer/>\n        </div>\n    )\n}\n\nexport default Content;","import React from 'react';\nimport Content from \"./Content\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ContentContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\")\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n        return (\n            <Content {...this.props} profile={this.props.profile} status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n\n});\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter,\n    //withAuthRedirect\n)(ContentContainer);\n\n\n"],"sourceRoot":""}