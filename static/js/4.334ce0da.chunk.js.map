{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messgesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,0FCapMC,EAVI,SAACC,GAChB,OAAO,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACH,cAAC,IAAD,CAASC,GAAI,YAAaL,EAAMM,GAAhC,SACKN,EAAMO,UCEJC,EANC,SAACR,GACb,OACI,qBAAKC,UAAWC,IAAEO,QAAlB,SAA4BT,EAAMS,W,yCCgCpCC,EAAcC,YAAiB,IAe/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbN,SAACb,GACnB,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBAAiBe,YAAY,yBAE7C,8BAAK,kDAOFC,EA5CC,SAACvB,GAGb,IAAIwB,EAAQxB,EAAMyB,YACdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAiBD,GAAIuB,EAAEvB,IAAZuB,EAAEvB,OAC3EwB,EAAkBN,EAAMO,SAASH,KAAM,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAqBvB,QAASuB,EAAEvB,SAAlBuB,EAAE1B,OAC3CkB,EAAMS,eAM3B,OAAKjC,EAAMkC,OAGP,sBAAKjC,UAAWC,IAAEyB,QAAlB,UACI,qBAAK1B,UAAWC,IAAEiC,aAAlB,SACKT,IAEL,sBAAKzB,UAAWC,IAAE6B,SAAlB,UAEG,oCAAOD,KACF,cAAClB,EAAD,CAAqBG,SAdjB,SAACqB,GACjBpC,EAAMqC,YAAYD,EAAOH,yBAGH,cAAC,IAAD,CAAU5B,GAAI,Y,wBCA7BiC,sBACXC,aAdkB,SAACf,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACe,GACtB,MAAO,CACHH,YAAa,SAACJ,GACdO,EAASC,YAAmBR,SAOhCS,IAFWJ,CAGbf","file":"static/js/4.334ce0da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1sxFB\",\"dialogsItems\":\"Dialogs_dialogsItems__97oGQ\",\"active\":\"Dialogs_active__WqI2v\",\"dialog\":\"Dialogs_dialog__3KztR\",\"messages\":\"Dialogs_messages__3_VnK\",\"message\":\"Dialogs_message__1pjJp\"};","import React from 'react';\nimport s from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    return <div className={s.dialog + ' ' + s.active}>\n        <NavLink to={\"/dialogs/\"+ props.id}>\n            {props.name}\n        </NavLink>\n    </div>\n}\n\n\n\nexport default DialogItem;","import React from 'react';\nimport s from './../Dialogs.module.css';\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>{props.message}</div>\n    )\n}\n\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogsItem\";\nimport Message from \"./Message/Message\";\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/preloader/FormsControls/FormsControls\";\nimport {maxLengthCreator,required} from \"../../utils/validators/validators\";\n\nconst Dialogs = (props) => {\n\n\n    let state = props.dialogsPage;\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} /> );\n    let messgesElements = state.messages.map ( m => <Message key={m.id}  message={m.message}/>);\n    let newMessageBody = state.newMessageBody;\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    };\n\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n\n               <div> {messgesElements}</div>\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n}\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm =(props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       validate={[required, maxLength50]}\n                       name=\"newMessageBody\" placeholder=\"Enter your message\"/>\n            </div>\n            <div><button>Send</button></div>\n        </form>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\n\nexport default Dialogs;","import React from 'react';\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/wthAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n        dispatch(sendMessageCreator(newMessageBody));\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps,mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}